#!/usr/bin/env python3
# -*- coding: utf-8 -*-


"""
@author: Ulrike Henny-Krahmer

Tests for statistical significance for differences in distributions of metadata values or text length between the various subgenres of the novel.
"""

from scipy.stats import chisquare
from scipy.stats import ttest_ind
from scipy.stats import describe
from scipy.stats import normaltest
from scipy.stats import mannwhitneyu
from scipy.stats import iqr
import random


## INPUT DATA
'''
# text length "novela" vs. other vs. none
# novelas
v1 = [79401,90800,20992,56661,58341,63347,26580,75198,17724,63807,231376,27840,23494,115995,44670,136311,41914,65026,330876,60881,146259,178353,33582,93573,41080,56883,32168,102735,100570,190317,85341,19325,46047,40281,157266,32314,24560,62052,124274,26730,39710,53230,151801,103198,36604,31596,45322,36093,128841,38884,172938,69206,49828,79999,26096,36132,23008,30800,73296,101221,42098,49116,33182,144648,25032,213844,57822,133942,36425,42919,206900,89231,69250,25753,15849,136402,138974,96690,20912,108815,39206,22991,95614,58700,55996,182647,120775,239353,315998,90415,217243,148644,64894,100447,73430,53129,39528,51837,136380,71994,36662,49802,61881,51132,34925,48747,35977,22593,188941,43446,81575,195753,76569,66897,17663,119738,36721,63808,27043,175143,29604,130454,19566,38681,89456,30551,180344,50534,110776,41403,68468,197895,55622,126730]
# other
v2 = [96986,18177,76720,17404,48060,20415,65047,100022,36461,42815,51313,16898,20770,68339,62521,81953,84295,18017,33544,23172,42858,20486,113882,120215,82313,43766,109335,21997,102306,59537,27133,109540,90242,36956,68462,58901,46760,50965,35091,26082,104443,50806,40595,52286,36161,99221,35057,15832,22668,88720,144155,21866,115941,62013]
# none
v3 = [37027,28612,39646,33524,41611,40255,23358,19791,19381,24010,91038,98005,303394,16253,72786,29429,50450,35006,19933,50497,48386,120938,33506,37570,47910,26780,17444,40924,105418,57685,72121,43221,59107,62205,67902,39814,98903,83234,140319,43997,114201,27599,186349,54823,32059,51085,50455,112713,39549,98704,17162,66652,75245,19643,99767,101792,17613,88443,45183,20574,82395,34557,29672,45987,40754,72592,82518,76659]
'''

'''
# novelas originales
v1 = [79401,20992,58341,75198,17724,23494,115995,44670,330876,41080,85341,19325,157266,24560,39710,53230,151801,36604,45322,49828,23008,33182,42919,69250,136402,39206,55996,315998,53129,49802,35977,175143,29604,38681,41403,197895]
# other
v2 = [96986,90800,76720,26580,231376,136311,65026,36461,60881,56883,51313,72786,190317,68339,46047,40281,50497,84295,128841,69206,79999,26096,30800,73296,43766,144648,25032,213844,57822,36425,27133,206900,50455,25753,90242,138974,96690,68462,20912,58700,58901,46760,182647,120775,239353,90415,148644,64894,100447,26082,51837,136380,71994,36662,61881,34925,48747,81575,195753,66897,63808,89456,30551,180344,68468]
# none
v3 = [18177,37027,56661,17404,63347,48060,63807,20415,65047,27840,28612,39646,33524,100022,41914,41611,40255,23358,146259,42815,19791,19381,24010,178353,33582,93573,91038,98005,303394,16253,16898,32168,102735,100570,29429,50450,20770,35006,19933,32314,62052,124274,26730,62521,103198,81953,48386,31596,120938,33506,37570,18017,33544,36093,38884,47910,172938,23172,42858,20486,113882,26780,120215,17444,82313,40924,105418,36132,57685,101221,109335,72121,42098,49116,43221,59107,62205,67902,39814,98903,21997,83234,140319,43997,133942,114201,27599,186349,102306,54823,59537,32059,51085,89231,109540,112713,15849,39549,36956,98704,108815,17162,22991,66652,95614,50965,35091,217243,73430,104443,75245,39528,19643,50806,99767,40595,51132,101792,52286,17613,22593,36161,88443,188941,99221,43446,76569,35057,15832,45183,22668,20574,17663,119738,36721,27043,88720,82395,34557,29672,144155,21866,130454,45987,19566,50534,110776,115941,40754,72592,62013,82518,55622,76659,126730]
'''

'''
# novelas americanas
v1 = [96986,90800,76720,26580,231376,136311,65026,36461,60881,41080,56883,51313,72786,190317,68339,46047,40281,53230,50497,36604,84295,128841,69206,79999,26096,30800,73296,43766,144648,25032,213844,57822,36425,27133,25753,90242,138974,96690,68462,20912,58700,58901,46760,182647,120775,239353,315998,90415,148644,64894,100447,26082,51837,136380,71994,36662,61881,34925,48747,81575,195753,66897,63808,89456,30551,180344,68468]
v2 = [79401,20992,58341,75198,17724,23494,115995,44670,330876,85341,19325,157266,24560,39710,151801,45322,49828,23008,33182,42919,206900,69250,50455,136402,39206,55996,53129,49802,35977,175143,29604,38681,41403,197895]
v3 = [18177,37027,56661,17404,63347,48060,63807,20415,65047,27840,28612,39646,33524,100022,41914,41611,40255,23358,146259,42815,19791,19381,24010,178353,33582,93573,91038,98005,303394,16253,16898,32168,102735,100570,29429,50450,20770,35006,19933,32314,62052,124274,26730,62521,103198,81953,48386,31596,120938,33506,37570,18017,33544,36093,38884,47910,172938,23172,42858,20486,113882,26780,120215,17444,82313,40924,105418,36132,57685,101221,109335,72121,42098,49116,43221,59107,62205,67902,39814,98903,21997,83234,140319,43997,133942,114201,27599,186349,102306,54823,59537,32059,51085,89231,109540,112713,15849,39549,36956,98704,108815,17162,22991,66652,95614,50965,35091,217243,73430,104443,75245,39528,19643,50806,99767,40595,51132,101792,52286,17613,22593,36161,88443,188941,99221,43446,76569,35057,15832,45183,22668,20574,17663,119738,36721,27043,88720,82395,34557,29672,144155,21866,130454,45987,19566,50534,110776,115941,40754,72592,62013,82518,55622,76659,126730]
'''

# novelas nacionales
v1 = [90800,136311,56883,190317,128841,69206,144648,25032,213844,27133,25753,90242,138974,58901,120775,239353,315998,90415,148644,51837,136380,61881,34925,48747,81575,195753,63808,89456,30551,180344]
v2 = [65026,50497,79999,68462,20912,46760,64894,100447,71994]
v3 = [96986,76720,26580,36461,60881,51313,68339,46047,40281,53230,36604,84295,26096,30800,73296,43766,36425,96690,58700,182647,36662,66897]
v4 = [79401,20992,58341,75198,17724,231376,23494,115995,44670,330876,41080,72786,85341,19325,157266,24560,39710,151801,45322,49828,23008,33182,57822,42919,206900,69250,50455,136402,39206,55996,26082,53129,49802,35977,175143,29604,38681,41403,68468,197895]
v5 = [18177,37027,56661,17404,63347,48060,63807,20415,65047,27840,28612,39646,33524,100022,41914,41611,40255,23358,146259,42815,19791,19381,24010,178353,33582,93573,91038,98005,303394,16253,16898,32168,102735,100570,29429,50450,20770,35006,19933,32314,62052,124274,26730,62521,103198,81953,48386,31596,120938,33506,37570,18017,33544,36093,38884,47910,172938,23172,42858,20486,113882,26780,120215,17444,82313,40924,105418,36132,57685,101221,109335,72121,42098,49116,43221,59107,62205,67902,39814,98903,21997,83234,140319,43997,133942,114201,27599,186349,102306,54823,59537,32059,51085,89231,109540,112713,15849,39549,36956,98704,108815,17162,22991,66652,95614,50965,35091,217243,73430,104443,75245,39528,19643,50806,99767,40595,51132,101792,52286,17613,22593,36161,88443,188941,99221,43446,76569,35057,15832,45183,22668,20574,17663,119738,36721,27043,88720,82395,34557,29672,144155,21866,130454,45987,19566,50534,110776,115941,40754,72592,62013,82518,55622,76659,126730]

'''
# time period of the setting for "novela"/other/none, values: contemporary/past/recent
contemp = [92,41,55]
contemp_exp = [98.324, 39.856, 50.008]
past = [27,5,8]
past_exp = [20.92,8.44,10.64]
recent = [15,8,5]
recent_exp = [14.644,5.908,7.448]
novela = [91,27,15]
novela_exp = [98.356,20.904,14.606]
other = [41,5,8]
other_exp = [39.636,8.424,5.886]
none = [55,8,5]
none_exp = [49.912,10.608,7.412]

## TESTS FOR SIGNIFICANCE
# t-test: the data should be normally distributed
# Mann-Whitney: the data must not be normally distributed (?), min. number of observations in each sample: 20
# chi-square: for categorical data: all the observed frequencies should at least be 5
# .. observed and expected frequencies can be indicated. 
# .. Example: for "novela", "other", "none", there are the actual overall frequencies (134,54,68) - (52.3%,21.1%,26.6%)
# .. now I want to know if the distribution by time period of the setting conforms to the expectations or not
# .. the overall frequencies for the time periods are: contemporary/past/recent (188,40,28) - (73.4%,15.6%,10.9%)
# .. now I can calculate the expected frequencies by mapping the proportions of novela/other/none to the sizes of contemporary/past/recent, respectively
# .. so taking 188 contemporary novels, I would expect novela/other/none to have: (98.324, 39.856, 50.008)
# .. now I can compare these expected values to the actual values of novela/other/none for contemporary, which are: (92,41,55) 
# .. chisquare(contemp, contemp_exp) - result: p-value of 0.6 -> no significant difference to the expectation
# .. Alternative: actual values not for contemp/past/recent, but for novela/other/none: (91,27,15); (41,5,8); (55,8,5)
# .. now I can calculate the expected frequencies by mapping the proportions of contemporary/past/recent to the overall sizes of novela/other/none, respectively 
# .. expected values for novela: (98.356, 20.904, 14.606)


print(chisquare(contemp, contemp_exp))
print(chisquare(past, past_exp))
print(chisquare(recent, recent_exp))
print(chisquare(novela, novela_exp))
print(chisquare(other, other_exp))
print(chisquare(none, none_exp))
'''



# check if the distribution of the whole dataset is normal
nt = normaltest(v1 + v2 + v3)
if nt.pvalue < 0.05:
	print("The null hypothesis can be rejected")
else:
	print("The null hypothesis cannot be rejected")
	
	
# perform Mann-Whitney test
print("v1:v2",mannwhitneyu(v1,v2))
print("v1:v3",mannwhitneyu(v1,v3))
print("v1:v4",mannwhitneyu(v1,v4))
print("v1:v5",mannwhitneyu(v1,v5))
print("v2:v3",mannwhitneyu(v2,v3))
print("v2:v4",mannwhitneyu(v2,v4))
print("v2:v5",mannwhitneyu(v2,v5))
print("v3:v4",mannwhitneyu(v3,v4))
print("v3:v5",mannwhitneyu(v3,v5))
print("v4:v5",mannwhitneyu(v4,v5))



''' 
# reduce the bigger sample to the size of the smaller one:
v1 = random.sample(v1,len(v2))
v3 = random.sample(v3,len(v2))
'''


# check if the variance is similar (the ratio of the variances should be between 0.5 and 2.0):
var1 = describe(v1).variance
var2 = describe(v2).variance
var3 = describe(v3).variance
varq = var3 / var2
#print(varq)

# calculate interquartile range
iqr1 = iqr(v1,rng=(25,100))
iqr2 = iqr(v2,rng=(25,100))
iqr3 = iqr(v3,rng=(25,100))
iqrq = iqr2 / iqr3
print(iqrq)

'''
# perform the t-test
print(ttest_ind(v2,v3,equal_var=True))
'''




